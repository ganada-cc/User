name: Deploy to GKE using Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: ssohy/cheer-user
      PROJECT_ID: ganada-cc
      CLUSTER_NAME: cc-cluster
      CLUSTER_ZONE: asia-northeast3-a

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Authenticate with Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker images with tags
        run: |
          docker build -t $IMAGE:${{ github.sha }} -t $IMAGE:latest .

      - name: Push both tags to Docker Hub
        run: |
          docker push $IMAGE:${{ github.sha }}
          docker push $IMAGE:latest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE

      - name: Create Kubernetes Secret from GitHub Secrets
        run: |
          kubectl create secret generic user-secret \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PW=${{ secrets.DB_PW }} \
            --from-literal=DB_PORT=${{ secrets.DB_PORT }} \
            --from-literal=DB_NAME=${{ secrets.DB_NAME }} \
            --from-literal=JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Replace image tag in cheer-user.yaml
        run: |
          sed -i "s|image: ssohy/cheer-user:.*|image: ssohy/cheer-user:${{ github.sha }}|" ssohy/cheer-user.yaml

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f cheer-user.yaml

      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment/user
